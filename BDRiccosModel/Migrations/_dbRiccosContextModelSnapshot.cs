// <auto-generated />
using System;
using BDRiccosModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BDRiccosModel.Migrations
{
    [DbContext(typeof(_dbRiccosContext))]
    partial class _dbRiccosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BDRiccosModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("EsPersonal")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BDRiccosModel.Asunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Asunto", "mensaje");
                });

            modelBuilder.Entity("BDRiccosModel.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Categoria", "producto");
                });

            modelBuilder.Entity("BDRiccosModel.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdTablaPersonaJuridica")
                        .HasColumnType("int");

                    b.Property<int?>("IdTablaPersonaNatural")
                        .HasColumnType("int");

                    b.Property<short>("IdTipoPersona")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("IdTablaPersonaJuridica");

                    b.HasIndex("IdTablaPersonaNatural");

                    b.ToTable("Cliente", "persona");
                });

            modelBuilder.Entity("BDRiccosModel.ClientePersonaJuridica", b =>
                {
                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Condicion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoPersonaJuridica")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonaJuridica")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ubigeo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("ClientePersonaJuridicas");
                });

            modelBuilder.Entity("BDRiccosModel.ClientePersonaNatural", b =>
                {
                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Celular")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonaNatural")
                        .HasColumnType("int");

                    b.Property<short?>("IdPersonaTipoDocumento")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("ClientePersonaNaturals");
                });

            modelBuilder.Entity("BDRiccosModel.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.ToTable("Delivery", "servicio");
                });

            modelBuilder.Entity("BDRiccosModel.DetallePedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool?>("EstadoPreparacion")
                        .HasColumnType("bit");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioSistema")
                        .HasColumnType("int");

                    b.Property<decimal>("PorcentajeDescuentoPorUnidad")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioSistema");

                    b.HasIndex(new[] { "IdPedido" }, "IX_DetallePedido_Id_Pedido");

                    b.HasIndex(new[] { "IdProducto" }, "IX_DetallePedido_Id_Producto");

                    b.ToTable("DetallePedido", "pedido");
                });

            modelBuilder.Entity("BDRiccosModel.DetallesPromocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdPromocion")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdPromocion");

                    b.ToTable("DetallesPromocion", "promocion");
                });

            modelBuilder.Entity("BDRiccosModel.EmailSuscriptor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaDesuscripcion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaSuscripcion")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Preferencias")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EmailSuscriptor", "Subscriptor");
                });

            modelBuilder.Entity("BDRiccosModel.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("RUC");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Urllogo")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Empresa", "empresa");
                });

            modelBuilder.Entity("BDRiccosModel.EnTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdMesa")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMesa");

                    b.HasIndex("IdPedido");

                    b.ToTable("EnTienda", "servicio");
                });

            modelBuilder.Entity("BDRiccosModel.EstadoMensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("EstadoMensaje", "mensaje");
                });

            modelBuilder.Entity("BDRiccosModel.EstadoVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("EstadoVenta", "venta");
                });

            modelBuilder.Entity("BDRiccosModel.HorariosRegulares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraApertura")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraCierre")
                        .HasColumnType("time");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdEmpresa" }, "Empresa_HorariosRegulares");

                    b.ToTable("HorariosRegulares", "empresa");
                });

            modelBuilder.Entity("BDRiccosModel.MensajeContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IdAsunto")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoMensaje")
                        .HasColumnType("int");

                    b.Property<int>("IdRemite")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdRemite");

                    b.HasIndex(new[] { "IdAsunto" }, "IX_MensajeContacto_id_Asunto");

                    b.HasIndex(new[] { "IdEstadoMensaje" }, "IX_MensajeContacto_id_estado");

                    b.ToTable("MensajeContacto", "mensaje");
                });

            modelBuilder.Entity("BDRiccosModel.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Mesa", "mesa");
                });

            modelBuilder.Entity("BDRiccosModel.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MetodoPago", "pago");
                });

            modelBuilder.Entity("BDRiccosModel.OnlineUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("IdApplicationUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdApplicationUser");

                    b.HasIndex("IdCliente");

                    b.ToTable("OnlineUser", "persona");
                });

            modelBuilder.Entity("BDRiccosModel.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<bool>("Finalizado")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("HoraEntrada")
                        .HasColumnType("time");

                    b.Property<byte>("IdServicio")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool>("VentaFinalizada")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Pedido", "pedido");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capital")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Condicion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Distrito")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short>("IdPersonaTipoDocumento")
                        .HasColumnType("smallint");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ubigeo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdPersonaTipoDocumento");

                    b.ToTable("PersonaJuridica", "persona");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaNatural", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Celular")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)");

                    b.Property<short>("IdPersonaTipoDocumento")
                        .HasColumnType("smallint");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdPersonaTipoDocumento");

                    b.ToTable("PersonaNatural", "persona");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaTipoDocumento", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("PersonaTipoDocumento", "persona");
                });

            modelBuilder.Entity("BDRiccosModel.PersonalEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdPersona" }, "IX_PersonalEmpresa_IdPersona");

                    b.ToTable("PersonalEmpresa", "persona");
                });

            modelBuilder.Entity("BDRiccosModel.Pickup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.ToTable("Pickup", "servicio");
                });

            modelBuilder.Entity("BDRiccosModel.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<decimal>("MargenGanancia")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IdCategoria" }, "IX_Carta_Id_Categoria");

                    b.ToTable("Producto", "producto");
                });

            modelBuilder.Entity("BDRiccosModel.Promocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DctoPorcentaje")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Promocion", "promocion");
                });

            modelBuilder.Entity("BDRiccosModel.Remite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Remite", "mensaje");
                });

            modelBuilder.Entity("BDRiccosModel.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Service", "servicio");
                });

            modelBuilder.Entity("BDRiccosModel.UsuariosSistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("IdApplicationUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdPersonalEmpresa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdApplicationUser");

                    b.HasIndex("IdPersonalEmpresa");

                    b.ToTable("UsuariosSistema", "persona");
                });

            modelBuilder.Entity("BDRiccosModel.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdComprobante")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int?>("IdVentaMercadoPago")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstadoVenta");

                    b.HasIndex("IdMetodoPago");

                    b.HasIndex(new[] { "IdComprobante" }, "IX_Venta_id_comprobante");

                    b.HasIndex(new[] { "IdPedido" }, "IX_Venta_id_pedido");

                    b.ToTable("Venta", "venta");
                });

            modelBuilder.Entity("BDRiccosModel.VistaDetallePedido", b =>
                {
                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.ToTable("VistaDetallePedidos");
                });

            modelBuilder.Entity("BDRiccosModel.VistaVenta", b =>
                {
                    b.Property<string>("Apellidos")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdComprobante")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoVenta")
                        .HasColumnType("int");

                    b.Property<int>("IdPago")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("VistaVenta");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BDRiccosModel.Cliente", b =>
                {
                    b.HasOne("BDRiccosModel.PersonaJuridica", "IdTablaPersonaJuridicaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTablaPersonaJuridica");

                    b.HasOne("BDRiccosModel.PersonaNatural", "IdTablaPersonaNaturalNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdTablaPersonaNatural");

                    b.Navigation("IdTablaPersonaJuridicaNavigation");

                    b.Navigation("IdTablaPersonaNaturalNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.Delivery", b =>
                {
                    b.HasOne("BDRiccosModel.Pedido", "IdPedidoNavigation")
                        .WithMany("Deliveries")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPedidoNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.DetallePedido", b =>
                {
                    b.HasOne("BDRiccosModel.Pedido", "IdPedidoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.Producto", "IdProductoNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.UsuariosSistema", "IdUsuarioSistemaNavigation")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdUsuarioSistema");

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdUsuarioSistemaNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.DetallesPromocion", b =>
                {
                    b.HasOne("BDRiccosModel.Producto", "IdProductoNavigation")
                        .WithMany("DetallesPromocions")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.Promocion", "IdPromocionNavigation")
                        .WithMany("DetallesPromocions")
                        .HasForeignKey("IdPromocion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdPromocionNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.EnTienda", b =>
                {
                    b.HasOne("BDRiccosModel.Mesa", "IdMesaNavigation")
                        .WithMany("EnTienda")
                        .HasForeignKey("IdMesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.Pedido", "IdPedidoNavigation")
                        .WithMany("EnTienda")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdMesaNavigation");

                    b.Navigation("IdPedidoNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.HorariosRegulares", b =>
                {
                    b.HasOne("BDRiccosModel.Empresa", "IdEmpresaNavigation")
                        .WithMany("Horarios")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.MensajeContacto", b =>
                {
                    b.HasOne("BDRiccosModel.Asunto", "IdAsuntoNavigation")
                        .WithMany("MensajeContactos")
                        .HasForeignKey("IdAsunto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.EstadoMensaje", "IdEstadoMensajeNavigation")
                        .WithMany("MensajeContactos")
                        .HasForeignKey("IdEstadoMensaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.Remite", "IdRemiteNavigation")
                        .WithMany("MensajeContactos")
                        .HasForeignKey("IdRemite")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdAsuntoNavigation");

                    b.Navigation("IdEstadoMensajeNavigation");

                    b.Navigation("IdRemiteNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.OnlineUser", b =>
                {
                    b.HasOne("BDRiccosModel.ApplicationUser", "IdApplicationUserNavigation")
                        .WithMany()
                        .HasForeignKey("IdApplicationUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.Cliente", "IdClienteNavigation")
                        .WithMany("OnlineUsers")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdApplicationUserNavigation");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaJuridica", b =>
                {
                    b.HasOne("BDRiccosModel.PersonaTipoDocumento", "IdPersonaTipoDocumentoNavigation")
                        .WithMany("PersonaJuridicas")
                        .HasForeignKey("IdPersonaTipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPersonaTipoDocumentoNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaNatural", b =>
                {
                    b.HasOne("BDRiccosModel.PersonaTipoDocumento", "IdPersonaTipoDocumentoNavigation")
                        .WithMany("PersonaNaturals")
                        .HasForeignKey("IdPersonaTipoDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPersonaTipoDocumentoNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.PersonalEmpresa", b =>
                {
                    b.HasOne("BDRiccosModel.PersonaNatural", "IdPersonaNavigation")
                        .WithMany("PersonalEmpresas")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.Pickup", b =>
                {
                    b.HasOne("BDRiccosModel.Pedido", "IdPedidoNavigation")
                        .WithMany("Pickups")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPedidoNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.Producto", b =>
                {
                    b.HasOne("BDRiccosModel.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.UsuariosSistema", b =>
                {
                    b.HasOne("BDRiccosModel.ApplicationUser", "IdApplicationUserNavigation")
                        .WithMany()
                        .HasForeignKey("IdApplicationUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.PersonalEmpresa", "IdPersonalEmpresaNavigation")
                        .WithMany("UsuariosSistemas")
                        .HasForeignKey("IdPersonalEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdApplicationUserNavigation");

                    b.Navigation("IdPersonalEmpresaNavigation");
                });

            modelBuilder.Entity("BDRiccosModel.Venta", b =>
                {
                    b.HasOne("BDRiccosModel.Cliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.EstadoVenta", "IdEstadoVentaNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdEstadoVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.MetodoPago", "IdMetodoPagoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.Pedido", "IdPedidoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdEstadoVentaNavigation");

                    b.Navigation("IdMetodoPagoNavigation");

                    b.Navigation("IdPedidoNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.HasOne("BDRiccosModel.ApplicationUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BDRiccosModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BDRiccosModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BDRiccosModel.ApplicationUser", null)
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BDRiccosModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BDRiccosModel.ApplicationUser", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("BDRiccosModel.Asunto", b =>
                {
                    b.Navigation("MensajeContactos");
                });

            modelBuilder.Entity("BDRiccosModel.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("BDRiccosModel.Cliente", b =>
                {
                    b.Navigation("OnlineUsers");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BDRiccosModel.Empresa", b =>
                {
                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("BDRiccosModel.EstadoMensaje", b =>
                {
                    b.Navigation("MensajeContactos");
                });

            modelBuilder.Entity("BDRiccosModel.EstadoVenta", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BDRiccosModel.Mesa", b =>
                {
                    b.Navigation("EnTienda");
                });

            modelBuilder.Entity("BDRiccosModel.MetodoPago", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BDRiccosModel.Pedido", b =>
                {
                    b.Navigation("Deliveries");

                    b.Navigation("DetallePedidos");

                    b.Navigation("EnTienda");

                    b.Navigation("Pickups");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaJuridica", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaNatural", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("PersonalEmpresas");
                });

            modelBuilder.Entity("BDRiccosModel.PersonaTipoDocumento", b =>
                {
                    b.Navigation("PersonaJuridicas");

                    b.Navigation("PersonaNaturals");
                });

            modelBuilder.Entity("BDRiccosModel.PersonalEmpresa", b =>
                {
                    b.Navigation("UsuariosSistemas");
                });

            modelBuilder.Entity("BDRiccosModel.Producto", b =>
                {
                    b.Navigation("DetallePedidos");

                    b.Navigation("DetallesPromocions");
                });

            modelBuilder.Entity("BDRiccosModel.Promocion", b =>
                {
                    b.Navigation("DetallesPromocions");
                });

            modelBuilder.Entity("BDRiccosModel.Remite", b =>
                {
                    b.Navigation("MensajeContactos");
                });

            modelBuilder.Entity("BDRiccosModel.UsuariosSistema", b =>
                {
                    b.Navigation("DetallePedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
